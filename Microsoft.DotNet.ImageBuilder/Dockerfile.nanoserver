# escape=`

# build Microsoft.DotNet.ImageBuilder
FROM microsoft/dotnet:2.1-sdk AS build-env
WORKDIR /image-builder

# restore packages before copying entire source - provides optimizations when rebuilding
COPY Microsoft.DotNet.ImageBuilder.sln ./
COPY NuGet.config ./
COPY src/Microsoft.DotNet.ImageBuilder.csproj ./src/
COPY tests/Microsoft.DotNet.ImageBuilder.Tests.csproj ./tests/
RUN dotnet restore Microsoft.DotNet.ImageBuilder.sln -r win7-x64

# copy everything else and build
COPY . ./
RUN dotnet build Microsoft.DotNet.ImageBuilder.sln -r win7-x64
RUN dotnet test tests/Microsoft.DotNet.ImageBuilder.Tests.csproj -r win7-x64
RUN dotnet publish ./src/Microsoft.DotNet.ImageBuilder.csproj -c Release -o out -r win7-x64


FROM microsoft/windowsservercore:1709 AS docker

SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

ENV DOCKER_CHANNEL test
ENV DOCKER_VERSION 17.09.0-ce-rc1
ENV DOCKER_DOWNLOAD_URL https://download.docker.com/win/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.zip

# retrieve Docker
# RUN Install-PackageProvider -Name "Nuget" -RequiredVersion "2.8.5.201" -Force; `
#     Install-Module -Name DockerMsftProvider -Repository PSGallery -Force; `
#     Install-Package -Name docker -ProviderName DockerMsftProvider -Force

RUN Invoke-WebRequest -Uri $env:DOCKER_DOWNLOAD_URL -OutFile 'docker.zip'
RUN Expand-Archive -Path docker.zip -DestinationPath .


# # build runtime image
# FROM microsoft/nanoserver:1803

# USER ContainerAdministrator

# COPY --from=docker ["docker\\docker.exe", "C:\\Program Files\\docker\\docker.exe"]
# #COPY ["docker.exe", "C:\\Program Files\\docker\\docker.exe"]
# RUN setx PATH "%PATH%;C:\Program Files\docker"

# WORKDIR /image-builder
# COPY --from=build-env /image-builder/src/out ./

# build runtime image
FROM microsoft/windowsservercore:1709
COPY ["docker.exe", "C:\\Program Files\\docker\\docker.exe"]
RUN setx PATH "%PATH%;C:\Program Files\docker"

# -v \\.\pipe\docker_engine:\\.\pipe\docker_engine Set-ExecutionPolicy Unrestricted; `
#docker run -d -p 8080:8080 -v \\.\pipe\docker_engine:\\.\pipe\docker_engine friism/jenkins
#docker run -it --rm -v \\.\pipe\docker_engine:\\.\pipe\docker_engine msimons/sandbox:nested-docker2
# https://github.com/jenkinsci/docker/pull/582/files
# https://blog.docker.com/2017/09/docker-windows-server-1709/
